{"version":3,"file":"main.js","mappings":"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A,OAAO;AACP;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,MAAM,4DAAW;AACjB,MAAM;AACN;AACA;AACA,MAAM,4DAAW;AACjB;AACA;;AAEA,EAAE,oEAAwB;AAC1B;AACA;AACA;AACA,6BAA6B,0DAAU;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iDAAM;AACvB;;AAEA;AACA,oBAAoB,IAAI,4EAAgC,EAAE;AAC1D,UAAU,qEAAyB;AACnC,wBAAwB,qEAAyB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,MAAM,8DAAY;AAClB,KAAK;;AAEL;AACA,MAAM,4DAAW;AACjB,KAAK;;AAEL;AACA;AACA,MAAM,0DAAU,kCAAkC,iDAAK;AACvD,KAAK;;AAEL;AACA;AACA,MAAM,2DAAU,qBAAqB,iDAAK;AAC1C,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;AChWO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpC4D;;AAE5D;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACvFA;AACO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;ACPA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BoC;;AAEpC;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,+BAA+B,gDAAM;AACrC;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACnJO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACJ4C;AACI;AACV;;AAE/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yDAAW;AACjB;AACA;AACA;AACA,GAAG;;AAEH;AACA,IAAI,yDAAW;AACf;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,yDAAW;;AAEf;AACA;;AAEA;;AAEA;AACA,MAAM,6DAAa;AACnB,KAAK;AACL;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;AChE4C;;AAErC;AACP,sCAAsC,yDAAW;AACjD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACR4C;AACI;;AAEzC;AACP;AACA;AACA,EAAE,yDAAW;AACb;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAa;AACjB,GAAG;AACH;;;;;;;;;;;;;;;;ACd4C;;AAErC;AACP;AACA,EAAE,yDAAW;AACb;;;;;;;UCLA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN2C;;AAE3C,wDAAW","sources":["webpack://top-todo-app/./node_modules/uuid/dist/esm-browser/native.js","webpack://top-todo-app/./node_modules/uuid/dist/esm-browser/regex.js","webpack://top-todo-app/./node_modules/uuid/dist/esm-browser/rng.js","webpack://top-todo-app/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://top-todo-app/./node_modules/uuid/dist/esm-browser/v4.js","webpack://top-todo-app/./node_modules/uuid/dist/esm-browser/validate.js","webpack://top-todo-app/./src/addProject.js","webpack://top-todo-app/./src/addProjectDom.js","webpack://top-todo-app/./src/addTask.js","webpack://top-todo-app/./src/addTaskDom.js","webpack://top-todo-app/./src/deleteProject.js","webpack://top-todo-app/./src/findElement.js","webpack://top-todo-app/./src/focusSelector.js","webpack://top-todo-app/./src/initialDom.js","webpack://top-todo-app/./src/removeAllChildNodes.js","webpack://top-todo-app/./src/submitProject.js","webpack://top-todo-app/./src/taskDelete.js","webpack://top-todo-app/./src/taskSubmit.js","webpack://top-todo-app/./src/updateColour.js","webpack://top-todo-app/webpack/bootstrap","webpack://top-todo-app/webpack/runtime/define property getters","webpack://top-todo-app/webpack/runtime/hasOwnProperty shorthand","webpack://top-todo-app/webpack/runtime/make namespace object","webpack://top-todo-app/./src/index.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import { submitProject } from \"./submitProject\";\nimport { deleteProject } from \"./deleteProject\";\nimport { addProjectDom } from \"./addProjectDom\";\nimport { removeAllChildNodes } from \"./removeAllChildNodes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { findElement } from \"./findElement\";\n\nexport const projectAdd = (\n  projectArray,\n  projectOptions,\n  headerTitle,\n  projectHeaderTitle,\n  headerDescription,\n  headerDescriptionInput,\n  activeProject,\n  activeProjectElement,\n  taskArray,\n  tasks,\n  CreateProject\n) => {\n  const addProjectDomReturn = addProjectDom();\n  const projectForm = addProjectDomReturn[0];\n  const projectDelete = addProjectDomReturn[1];\n  const projectInput = addProjectDomReturn[2];\n  projectInput.focus();\n\n  const createProject = new CreateProject(\n    projectForm.id,\n    projectInput.value,\n    uuidv4(),\n    projectHeaderTitle,\n    headerDescriptionInput.value\n  );\n\n  projectArray = [...projectArray, createProject];\n\n  // Ensures that new tasks are added to the new project that's just been added.\n  activeProject = findElement(projectArray, createProject).id;\n  // Set activeProjectElement to the new project.\n  activeProjectElement = findElement(projectArray, createProject);\n\n  submitProject(\n    projectForm,\n    projectInput,\n    projectArray,\n    projectOptions,\n    headerTitle,\n    headerDescription,\n    headerDescriptionInput\n    // activeProject,\n    // activeProjectElement\n  );\n\n  projectDelete.addEventListener(\"click\", (e) => {\n    deleteProject(e, projectArray, taskArray, activeProject, activeProjectElement, projectForm, projectOptions);\n  });\n\n  // Removes all the tasks from the display to show the new and empty project.\n  removeAllChildNodes(tasks);\n\n  projectForm.addEventListener(\"click\", (e) => {\n    console.table(projectArray);\n    console.table(taskArray);\n\n    activeProject = e.currentTarget.id;\n\n    removeAllChildNodes(tasks);\n\n    headerTitle.value = projectInput.value;\n\n    console.log(activeProject);\n    projectArray.forEach((arrayItem) => {\n      if (arrayItem.id === activeProject) {\n        activeProjectElement = arrayItem;\n      }\n    });\n    // console.table(taskArray);\n    // console.table(projectArray);\n    taskArray.forEach((arrayItem) => {\n      if (arrayItem.projectLink === activeProjectElement.taskLink) {\n        // console.log(\"lol\");\n        // Rebuild and append all the tasks/todos using the properties stored in the taskArray.\n        showTasks(arrayItem);\n      }\n    });\n    projectInput.focus();\n  });\n\n  return [projectArray, activeProject, activeProjectElement];\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport const addProjectDom = () => {\n  const projectOptions = document.querySelector(\".projectOptions\");\n\n  const projectForm = document.createElement(\"form\");\n  projectForm.classList.add(\"projectForm\");\n  projectOptions.appendChild(projectForm);\n\n  const projectDelete = document.createElement(\"div\");\n  projectDelete.classList.add(\"projectDelete\");\n  projectDelete.textContent = \"x\";\n  projectForm.appendChild(projectDelete);\n\n  projectForm.setAttribute(\"id\", uuidv4());\n\n  const projectInput = document.createElement(\"input\");\n  projectInput.classList.add(\"projectInput\");\n  projectInput.setAttribute(\"placeholder\", \"Project name\");\n  projectForm.appendChild(projectInput);\n\n  return [projectForm, projectDelete, projectInput];\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport {\n  wrapper,\n  nav,\n  calendarHeader,\n  calendarHeaderTitle,\n  contentSeparator,\n  calendarOptions,\n  calendarToday,\n  calendarWeek,\n  calendarTitle,\n  projects,\n  projectsHeader,\n  projectsTopLine,\n  projectsTitle,\n  editProjects,\n  contentSeparator2,\n  addProject,\n  projectOptions,\n  projectForm,\n  projectDelete,\n  projectInput,\n  content,\n  header,\n  headerTitleWrapper,\n  headerTitleForm,\n  headerTitle,\n  headerTitleEdit,\n  headerDescription,\n  headerDescriptionInput,\n  contentSeparator3,\n  addTask,\n  tasks,\n} from \"./initialDom.js\";\n\nimport { addProjectDom } from \"./addProjectDom.js\";\nimport { addTaskDom } from \"./addTaskDom.js\";\nimport { focusSelector } from \"./focusSelector.js\";\nimport { deleteProject } from \"./deleteProject.js\";\nimport { findElement } from \"./findElement.js\";\nimport { submitProject } from \"./submitProject.js\";\nimport { updateColour } from \"./updateColour.js\";\nimport { removeAllChildNodes } from \"./removeAllChildNodes.js\";\nimport { taskSubmit } from \"./taskSubmit.js\";\nimport { taskDelete } from \"./taskDelete.js\";\nimport { projectAdd } from \"./addProject.js\";\n\nexport function addTaskName() {\n  class CreateProject {\n    constructor(id, title, taskLink, headerTitle, headerDescription) {\n      this.id = id;\n      this.title = title;\n      this.taskLink = taskLink;\n      this.headerTitle = headerTitle;\n      this.headerDescription = headerDescription;\n    }\n  }\n  class CreateTask {\n    constructor(id, title, colour, done, projectLink) {\n      this.id = id;\n      this.title = title;\n      this.colour = colour;\n      this.done = done;\n      this.projectLink = projectLink;\n    }\n  }\n\n  // Declare the array that holds all the tasks/todos.\n  let taskArray = [];\n  // Declares array that holds all the projects.\n  let projectArray = [];\n\n  const showTasks = (arrayItem) => {\n    const addTaskDomReturn = addTaskDom();\n    const taskBox = addTaskDomReturn[0];\n    const taskCheck = addTaskDomReturn[1];\n    const task = addTaskDomReturn[2];\n    const colour = addTaskDomReturn[3];\n    const deleteTask = addTaskDomReturn[4];\n    const taskText = addTaskDomReturn[5];\n\n    taskText.value = arrayItem.title;\n    if (arrayItem.done === true) {\n      taskCheck.classList.add(\"checked\");\n      taskBox.classList.add(\"opacity\");\n    }\n    taskCheck.addEventListener(\"click\", (e) => {\n      taskCheckClicked(taskCheck, taskBox, taskArray);\n    });\n\n    taskText.focus();\n\n    // Set taskBox DOM element id to match its corresponding taskArray id.\n    taskBox.setAttribute(\"id\", arrayItem.id);\n    // Set taskBox DOM element background colour to match its corresponding taskArray colour.\n    taskBox.style.backgroundColor = arrayItem.colour;\n    // Listen for colour updates\n    colour.addEventListener(\"input\", (e) => {\n      updateColour(colour, taskBox, taskArray);\n    });\n\n    // Updates the task's title in the array.\n    task.addEventListener(\"submit\", (e) => {\n      taskSubmit(e, taskArray, taskBox, taskText, tasks);\n    });\n\n    // Deletes task from the DOM and removes it from the array upon click on delete icon on task.\n    deleteTask.addEventListener(\"click\", (e) => {\n      taskDelete(taskArray, taskBox, tasks);\n    });\n\n    task.addEventListener(\"keydown\", (e) => {\n      findElement(taskArray, taskBox).title = taskText.value;\n    });\n  };\n\n  headerTitleEdit.addEventListener(\"click\", (e) => {\n    headerTitle.select();\n  });\n\n  headerTitleForm.addEventListener(\"keyup\", (e) => {\n    for (let i = 0; i < projectOptions.children.length; i++) {\n      if (projectOptions.childNodes[i].id === activeProjectElement.id) {\n        projectOptions.childNodes[i].querySelector(\"input\").value = headerTitle.value;\n      }\n    }\n  });\n\n  headerTitleForm.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    headerTitle.blur();\n    findElement(projectArray, activeProjectElement).title = headerTitle.value;\n    for (let i = 0; i < projectOptions.children.length; i++) {\n      if (projectOptions.childNodes[i].id === activeProjectElement.id) {\n        projectOptions.childNodes[i].querySelector(\"input\").value = headerTitle.value;\n      }\n    }\n  });\n\n  projectDelete.addEventListener(\"click\", (e) => {\n    deleteProject(e, projectArray, taskArray, activeProject, activeProjectElement, projectForm, projectOptions);\n  });\n\n  let projectHeaderTitle = \"bruh\";\n\n  headerDescription.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    headerDescriptionInput.blur();\n    console.table(projectArray);\n    // 99 push this value into the projectArray and update array on keydown and submit.\n    findElement(projectArray, activeProjectElement).headerDescription = headerDescriptionInput.value;\n    console.table(projectArray);\n  });\n\n  headerDescription.addEventListener(\"keydown\", (e) => {\n    findElement(projectArray, activeProjectElement).headerDescription = headerDescriptionInput.value;\n  });\n\n  // Creates the initial example project from the CreateProject class.\n  const createProject = new CreateProject(\n    projectForm.id,\n    projectInput.value,\n    uuidv4(),\n    projectHeaderTitle,\n    headerDescriptionInput.value\n  );\n\n  // Adds the first project to the project array.\n  projectArray = [...projectArray, createProject];\n\n  // activeProject is the projectForm's id element.\n  let activeProject = projectForm.id;\n  // activeProjectElement is the arrayItem with a matching id of activeProject.\n  let activeProjectElement = projectOptions.childNodes[0];\n\n  submitProject(\n    projectForm,\n    projectInput,\n    projectArray,\n    projectOptions,\n    headerTitle,\n    headerDescription,\n    headerDescriptionInput,\n    activeProject,\n    activeProjectElement,\n    taskArray\n  );\n\n  projectForm.addEventListener(\"click\", (e) => {\n    for (let i = 0; i < projectOptions.childNodes.length; i++) {\n      projectOptions.childNodes[i].classList.remove(\"focused\");\n    }\n    projectForm.classList.add(\"focused\");\n\n    activeProject = e.currentTarget.id;\n    projectForm.classList.add(\"focused\");\n\n    removeAllChildNodes(tasks);\n\n    headerTitle.value = projectInput.value;\n\n    projectArray.forEach((arrayItem) => {\n      if (arrayItem.id === activeProject) {\n        activeProjectElement = arrayItem;\n      }\n    });\n    taskArray.forEach((arrayItem) => {\n      if (arrayItem.projectLink === activeProjectElement.taskLink) {\n        // Rebuild and append all the tasks/todos using the properties stored in the taskArray.\n        showTasks(arrayItem);\n      }\n    });\n    projectInput.focus();\n  });\n\n  addProject.addEventListener(\"click\", (e) => {\n    const addProjectDomReturn = addProjectDom();\n    const projectForm = addProjectDomReturn[0];\n    const projectDelete = addProjectDomReturn[1];\n    const projectInput = addProjectDomReturn[2];\n    projectInput.focus();\n\n    const createProject = new CreateProject(\n      projectForm.id,\n      projectInput.value,\n      uuidv4(),\n      projectHeaderTitle,\n      headerDescriptionInput.value\n    );\n\n    projectArray = [...projectArray, createProject];\n\n    // Ensures that new tasks are added to the new project that's just been added.\n    activeProject = findElement(projectArray, createProject).id;\n    // Set activeProjectElement to the new project.\n    activeProjectElement = findElement(projectArray, createProject);\n\n    submitProject(\n      projectForm,\n      projectInput,\n      projectArray,\n      projectOptions,\n      headerTitle,\n      headerDescription,\n      headerDescriptionInput,\n      activeProject,\n      activeProjectElement,\n      taskArray\n    );\n\n    projectDelete.addEventListener(\"click\", (e) => {\n      deleteProject(e, projectArray, taskArray, activeProject, activeProjectElement, projectForm, projectOptions);\n    });\n\n    // Removes all the tasks from the display to show the new and empty project.\n    removeAllChildNodes(tasks);\n\n    projectForm.addEventListener(\"click\", (e) => {\n      for (let i = 0; i < projectOptions.childNodes.length; i++) {\n        projectOptions.childNodes[i].classList.remove(\"focused\");\n      }\n      projectForm.classList.add(\"focused\");\n\n      activeProject = e.currentTarget.id;\n\n      removeAllChildNodes(tasks);\n\n      headerTitle.value = projectInput.value;\n\n      console.log(activeProject);\n      projectArray.forEach((arrayItem) => {\n        if (arrayItem.id === activeProject) {\n          activeProjectElement = arrayItem;\n        }\n      });\n\n      taskArray.forEach((arrayItem) => {\n        if (arrayItem.projectLink === activeProjectElement.taskLink) {\n          // console.log(\"lol\");\n          // Rebuild and append all the tasks/todos using the properties stored in the taskArray.\n          showTasks(arrayItem);\n        }\n      });\n      projectInput.focus();\n    });\n  });\n\n  const taskCheckClicked = (taskCheck, taskBox, taskArray) => {\n    if (taskCheck.classList.contains(\"checked\")) {\n      taskCheck.classList.remove(\"checked\");\n      taskBox.classList.remove(\"opacity\");\n      findElement(taskArray, taskBox).done = false;\n    } else {\n      taskCheck.classList.add(\"checked\");\n      taskBox.classList.add(\"opacity\");\n      findElement(taskArray, taskBox).done = true;\n    }\n  };\n\n  addTask.addEventListener(\"click\", (e) => {\n    if (projectArray.length === 0) {\n      return alert(\"Make a project first\");\n    }\n    const addTaskDomReturn = addTaskDom();\n    const taskBox = addTaskDomReturn[0];\n    const taskCheck = addTaskDomReturn[1];\n    const task = addTaskDomReturn[2];\n    const colour = addTaskDomReturn[3];\n    const deleteTask = addTaskDomReturn[4];\n    const taskText = addTaskDomReturn[5];\n\n    let taskId = uuidv4();\n    taskBox.setAttribute(\"id\", taskId);\n\n    // Sets activeProject based on which project contains the class \"focused\"\n    for (let i = 0; i < projectOptions.childNodes.length; i++) {\n      if (projectOptions.childNodes[i].classList.contains(\"focused\")) {\n        activeProject = projectOptions.childNodes[i].id;\n      }\n    }\n    // Find the first project from projectArray matching with activeProject.\n    const match = projectArray.find((element) => element.id === activeProject);\n    // The line below sets the projectLink to match the projectArray's taskLink.\n\n    let projectLink = match.taskLink;\n    console.log(activeProject);\n    const createTask = new CreateTask(taskBox.id, taskText.value, taskBox.style.backgroundColor, false, projectLink);\n    taskArray = [...taskArray, createTask];\n    taskText.focus();\n\n    taskCheck.addEventListener(\"click\", (e) => {\n      taskCheckClicked(taskCheck, taskBox, taskArray);\n    });\n\n    colour.addEventListener(\"input\", (e) => {\n      updateColour(colour, taskBox, taskArray);\n    });\n\n    task.addEventListener(\"keydown\", (e) => {\n      findElement(taskArray, taskBox).title = taskText.value;\n    });\n\n    // Updates the task's properties in the array.\n    task.addEventListener(\"submit\", (e) => {\n      taskSubmit(e, taskArray, taskBox, taskText, tasks);\n    });\n\n    // Deletes task from the DOM and removes it from the array upon click on delete icon on task.\n    deleteTask.addEventListener(\"click\", (e) => {\n      taskDelete(taskArray, taskBox, tasks);\n    });\n  });\n}\n","export const addTaskDom = () => {\n  const tasks = document.querySelector(\".tasks\");\n\n  const taskBox = document.createElement(\"div\");\n  taskBox.classList.add(\"taskBox\");\n\n  const taskCheck = document.createElement(\"div\");\n  taskCheck.classList.add(\"taskCheck\");\n\n  const task = document.createElement(\"form\");\n  task.setAttribute(\"type\", \"text\");\n  task.setAttribute(\"method\", \"post\");\n  task.setAttribute(\"name\", \"taskForm\");\n  task.dataset.form;\n  task.classList.add(\"task\");\n\n  const taskText = document.createElement(\"input\");\n  taskText.dataset.input;\n\n  const colour = document.createElement(\"input\");\n  colour.setAttribute(\"type\", \"color\");\n  colour.classList.add(\"colour\");\n\n  const deleteTask = document.createElement(\"img\");\n  deleteTask.src = \"../dist/xIcon.png\";\n  deleteTask.classList.add(\"deleteTask\");\n  taskText.setAttribute(\"placeholder\", \"What's your task?\");\n\n  tasks.appendChild(taskBox);\n  taskBox.appendChild(taskCheck);\n  taskBox.appendChild(task);\n  taskBox.appendChild(colour);\n  taskBox.appendChild(deleteTask);\n  task.appendChild(taskText);\n\n  return [taskBox, taskCheck, task, colour, deleteTask, taskText];\n};\n","import { removeAllChildNodes } from \"./removeAllChildNodes\";\n\nconst findElement = (targetArray, targetMatch) => {\n  return targetArray.find((arrayItem) => {\n    if (arrayItem.id === targetMatch.id) {\n      return arrayItem;\n    }\n  });\n};\n\nexport const deleteProject = (\n  e,\n  projectArray,\n  taskArray,\n  activeProject,\n  activeProjectElement,\n  projectForm,\n  projectOptions\n) => {\n  let removeArray = [];\n\n  console.log(activeProject);\n  const activeProjectBefore = activeProject;\n  // Sets activeProject to the delete-clicked form's id and activeProjectElement to the matching arrayItem.\n  // Identifies which projectDelete DOM form was clicked compared to the projectArray.\n  activeProject = e.currentTarget.parentNode.id;\n  projectArray.forEach((arrayItem) => {\n    if (arrayItem.id === activeProject) {\n      activeProjectElement = arrayItem;\n    }\n  });\n  //   Use activeProject and find the matching element taskBox and focus that one\n\n  // Loops over taskArray and checks if the arrayItem's match the activeProjectElement's taskLink.\n  taskArray.forEach((arrayItem) => {\n    if (arrayItem.projectLink === activeProjectElement.taskLink) {\n      const taskIndex = taskArray.indexOf(arrayItem);\n      removeArray.push(taskIndex);\n    }\n  });\n\n  // if (projectArray.length === 1) {\n  //   removeAllChildNodes(projectArray);\n  //   removeAllChildNodes(taskArray);\n  //   console.log(\"lol\");\n  // }\n\n  if (activeProjectBefore === e.currentTarget.parentNode.id) {\n    const parent = e.currentTarget.parentNode;\n    if (projectOptions.children.length > 1) {\n      const nextInput = parent.nextElementSibling.querySelector(\"input\");\n      nextInput.focus();\n    }\n  } else {\n    const currentActiveProject = projectArray.find((arrayItem) => {\n      if (arrayItem.id === activeProjectBefore) {\n        return arrayItem;\n      }\n    });\n    // Error when keep on deleting projects after having done the first one. Look into this. 99\n    const projectOptionsChildren = [...projectOptions.children];\n    // currentActiveProject is not set on the second time around.\n    console.log(currentActiveProject);\n    const focusThis = projectOptionsChildren.find((element) => element.id === currentActiveProject.id);\n    console.log(focusThis);\n    focusThis.querySelector(\"input\").focus();\n  }\n\n  //   console.table(removeArray);\n  for (let i = removeArray.length - 1; i >= 0; i--) {\n    taskArray.splice(removeArray[i], 1);\n  }\n  // Find the index of the project in projectArray that has the same ID as the DOM project element.\n  const projectIndex = projectArray.indexOf(findElement(projectArray, projectForm));\n  // Removes the respective element in the array using the DOM elements' id.\n  projectArray.splice(projectIndex, 1);\n  //   Removes the entire project(form) from the DOM.\n  projectOptions.removeChild(projectForm);\n\n  //   console.log(\"Project Array:\");\n  console.table(projectArray);\n  //   console.log(\"Task Array:\");\n  console.table(taskArray);\n  console.log(activeProject);\n\n  //   console.log(activeProject);\n  //   console.log(activeProjectElement);\n};\n","// Loops through the targetArray and returns the first match.\nexport const findElement = (targetArray, targetMatch) => {\n  return targetArray.find((arrayItem) => {\n    if (arrayItem.id === targetMatch.id) {\n      return arrayItem;\n    }\n  });\n};\n","// Focuses and blurs the input boxes as the user navigates them.\n// The formElement parameter is poorly named, as it depends on the DOM structure, but in most cases it will be a form element.\nexport const focusSelector = (e, parentElement, currentElement, formElement) => {\n  if (e.key === \"Enter\") {\n    // If there's only one child element, blur the selection.\n    if (parentElement.children.length === 1) {\n      return currentElement.blur();\n    }\n    // If the selection is at the final DOM element of the list, go back to the first DOM element.\n    if (formElement.nextElementSibling === null) {\n      parentElement.firstElementChild.querySelector(\"input\").focus();\n      parentElement.lastElementChild.classList.remove(\"focused\");\n      parentElement.firstElementChild.classList.add(\"focused\");\n\n      return;\n    }\n    // Focus on the next DOM element\n    const nextInput = formElement.nextElementSibling;\n    nextInput.querySelector(\"input\").focus();\n    formElement.classList.remove(\"focused\");\n    nextInput.classList.add(\"focused\");\n    console.log(\"focused\");\n  }\n  if (e.key === \"Escape\") {\n    formElement.classList.remove(\"focused\");\n    currentElement.blur();\n  }\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\nconst contentDiv = document.querySelector(\"#content\");\n\nexport const wrapper = document.createElement(\"div\");\nwrapper.classList.add(\"wrapper\");\ncontentDiv.appendChild(wrapper);\n\nexport const nav = document.createElement(\"div\");\nnav.classList.add(\"nav\");\nwrapper.appendChild(nav);\n\nexport const calendar = document.createElement(\"div\");\ncalendar.classList.add(\"calendar\");\nnav.appendChild(calendar);\n\nexport const calendarHeader = document.createElement(\"div\");\ncalendarHeader.classList.add(\"calendarHeader\");\ncalendar.appendChild(calendarHeader);\n\nexport const calendarHeaderTitle = document.createElement(\"div\");\ncalendarHeaderTitle.classList.add(\"calendarHeaderTitle\");\ncalendarHeaderTitle.textContent = \"Plan\";\ncalendarHeader.appendChild(calendarHeaderTitle);\n\nexport const contentSeparator = document.createElement(\"div\");\ncontentSeparator.classList.add(\"contentSeparator\");\ncalendarHeader.appendChild(contentSeparator);\n\nexport const calendarOptions = document.createElement(\"div\");\ncalendarOptions.classList.add(\"calendarOptions\");\ncalendar.appendChild(calendarOptions);\n\nexport const calendarToday = document.createElement(\"div\");\ncalendarToday.classList.add(\"calendarToday\");\ncalendarToday.textContent = \"Today\";\ncalendarOptions.appendChild(calendarToday);\n\nexport const calendarWeek = document.createElement(\"div\");\ncalendarWeek.classList.add(\"calendarWeek\");\ncalendarWeek.textContent = \"This Week\";\ncalendarOptions.appendChild(calendarWeek);\n\nexport const calendarTitle = document.createElement(\"div\");\ncalendarTitle.classList.add(\"calendarTitle\");\ncalendarTitle.textContent = \"Calendar\";\ncalendarOptions.appendChild(calendarTitle);\n\nexport const projects = document.createElement(\"div\");\nprojects.classList.add(\"projects\");\nnav.appendChild(projects);\n\nexport const projectsHeader = document.createElement(\"div\");\nprojectsHeader.classList.add(\"projectsHeader\");\nprojects.appendChild(projectsHeader);\n\nexport const projectsTopLine = document.createElement(\"div\");\nprojectsTopLine.classList.add(\"projectsTopLine\");\nprojectsHeader.appendChild(projectsTopLine);\n\nexport const projectsTitle = document.createElement(\"div\");\nprojectsTitle.classList.add(\"projectsTitle\");\nprojectsTitle.textContent = \"Projects\";\nprojectsTopLine.appendChild(projectsTitle);\n\nexport const editProjects = document.createElement(\"div\");\neditProjects.classList.add(\"editProjects\");\n// editProjects.textContent = \"Edit\";\nprojectsTopLine.appendChild(editProjects);\n\nexport const contentSeparator2 = document.createElement(\"div\");\ncontentSeparator2.classList.add(\"contentSeparator\");\nprojectsHeader.appendChild(contentSeparator2);\n\nexport const addProject = document.createElement(\"div\");\naddProject.classList.add(\"addProject\");\naddProject.textContent = \"+ Add Project\";\nprojectsHeader.appendChild(addProject);\n\nexport const projectOptions = document.createElement(\"div\");\nprojectOptions.classList.add(\"projectOptions\");\nprojects.appendChild(projectOptions);\n\nexport const projectForm = document.createElement(\"form\");\nprojectForm.classList.add(\"projectForm\");\nprojectForm.setAttribute(\"id\", uuidv4());\nprojectOptions.appendChild(projectForm);\n\nexport const projectDelete = document.createElement(\"div\");\nprojectDelete.classList.add(\"projectDelete\");\nprojectDelete.textContent = \"x\";\nprojectForm.appendChild(projectDelete);\n\nexport const projectInput = document.createElement(\"input\");\nprojectInput.classList.add(\"projectInput\");\nprojectInput.value = \"Example Project\";\nprojectInput.setAttribute(\"placeholder\", \"Project name\");\nprojectForm.appendChild(projectInput);\n\nexport const content = document.createElement(\"div\");\ncontent.classList.add(\"content\");\nwrapper.appendChild(content);\n\nexport const header = document.createElement(\"div\");\nheader.classList.add(\"header\");\ncontent.appendChild(header);\n\nexport const headerTitleWrapper = document.createElement(\"div\");\nheaderTitleWrapper.classList.add(\"headerTitleWrapper\");\nheader.appendChild(headerTitleWrapper);\n\nexport const headerTitleForm = document.createElement(\"form\");\nheaderTitleForm.classList.add(\"headerTitleForm\");\nheaderTitleWrapper.appendChild(headerTitleForm);\n\nexport const headerTitle = document.createElement(\"input\");\nheaderTitle.classList.add(\"headerTitle\");\nheaderTitle.value = projectInput.value;\nheaderTitle.setAttribute(\"placeholder\", \"Header Title\");\nheaderTitleForm.appendChild(headerTitle);\n\nexport const headerTitleEdit = document.createElement(\"div\");\nheaderTitleEdit.classList.add(\"headerTitleEdit\");\nheaderTitleEdit.textContent = \"Edit\";\nheaderTitleWrapper.appendChild(headerTitleEdit);\n\nexport const headerDescription = document.createElement(\"form\");\nheaderDescription.classList.add(\"headerDescription\");\nheader.appendChild(headerDescription);\n\nexport const headerDescriptionInput = document.createElement(\"input\");\nheaderDescriptionInput.classList.add(\"headerDescriptionInput\");\nheaderDescriptionInput.setAttribute(\"placeholder\", \"Project Description\");\nheaderDescription.appendChild(headerDescriptionInput);\n\nexport const contentSeparator3 = document.createElement(\"div\");\ncontentSeparator3.classList.add(\"contentSeparator\");\ncontent.appendChild(contentSeparator3);\n\nexport const addTask = document.createElement(\"div\");\naddTask.classList.add(\"addTask\");\naddTask.textContent = \"+ Add Task\";\ncontent.appendChild(addTask);\n\nexport const tasks = document.createElement(\"div\");\ntasks.classList.add(\"tasks\");\ntasks.dataset.lists;\ncontent.appendChild(tasks);\n","export const removeAllChildNodes = (parent) => {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n};\n","import { findElement } from \"./findElement\";\nimport { focusSelector } from \"./focusSelector\";\nimport { header } from \"./initialDom\";\n\nexport const submitProject = (\n  projectForm,\n  projectInput,\n  projectArray,\n  projectOptions,\n  headerTitle,\n  headerDescription,\n  headerDescriptionInput,\n  activeProject,\n  activeProjectElement,\n  taskArray\n) => {\n  // Actively updates the projectArray and the headerTitle on keyup.\n  projectForm.addEventListener(\"keyup\", (e) => {\n    // This if check avoids making this eventListener be activated if the form is submitted.\n    if (e.key !== \"Enter\") {\n      findElement(projectArray, projectForm).title = projectInput.value;\n      // Updates the headerTitle to match the projectInput name.\n      headerTitle.value = projectInput.value;\n    }\n  });\n\n  headerDescription.addEventListener(\"keyup\", (e) => {\n    findElement(projectArray, headerDescriptionInput).headerDescription = headerDescriptionInput.value;\n    // Updates the headerTitle to match the projectInput name.\n    headerDescription.value = \"LOL\";\n  });\n\n  // 99\n  // Further, make it so that when the user cycles through the projects using enter (submit) the approriate tasks are loaded and shown.\n  // Might need to get access to showTasks() from addTask.js for the latter.\n\n  projectForm.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n\n    // Find the element in the array that has the same ID as the DOM project element and set its title to the array input title.\n    findElement(projectArray, projectForm).title = projectInput.value;\n\n    // const match = projectArray.find((element) => element.id === activeProject);\n    // // The line below sets the projectLink to match the projectArray's taskLink.\n\n    // let projectLink = match.taskLink;\n\n    projectInput.addEventListener(\"keyup\", (e) => {\n      focusSelector(e, projectOptions, projectInput, projectForm);\n    });\n    console.log(activeProject);\n    for (let i = 0; i < projectOptions.children.length; i++) {\n      if (projectOptions.childNodes[i].id === activeProjectElement.id && i + 1 !== projectOptions.children.length) {\n        return [\n          (headerTitle.value = projectOptions.childNodes[i + 1].querySelector(\"input\").value),\n          // (activeProject = projectOptions.childNodes[i + 1].id),\n        ];\n      }\n      if (i + 1 === projectOptions.children.length) {\n        headerTitle.value = projectOptions.childNodes[0].querySelector(\"input\").value;\n        // activeProject = projectOptions.childNodes[0].id;\n      }\n    }\n  });\n};\n","import { findElement } from \"./findElement\";\n\nexport const taskDelete = (taskArray, taskBox, tasks) => {\n  const taskIndex = taskArray.indexOf(findElement(taskArray, taskBox));\n  // Removes the respective element in the array using the DOM elements' id.\n  taskArray.splice(taskIndex, 1);\n  //   Removes the entire task(box) from the DOM.\n  tasks.removeChild(taskBox);\n};\n","import { findElement } from \"./findElement\";\nimport { focusSelector } from \"./focusSelector\";\n\nexport const taskSubmit = (e, taskArray, taskBox, taskText, tasks) => {\n  e.preventDefault();\n  //   Sets/updates the title to the array item.\n  findElement(taskArray, taskBox).title = taskText.value;\n  if (tasks.children.length === 1) {\n    return taskText.blur();\n  }\n  //   Moves onto the next input field whenever enter is clicked\n  taskText.addEventListener(\"keyup\", (e) => {\n    focusSelector(e, tasks, taskText, taskBox);\n  });\n};\n","import { findElement } from \"./findElement\";\n\nexport const updateColour = (colour, domElement, taskArray) => {\n  domElement.style.backgroundColor = colour.value;\n  findElement(taskArray, domElement).colour = colour.value;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addTaskName } from \"./addTask.js\";\n\naddTaskName();\n"],"names":[],"sourceRoot":""}